apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-gallery-master
  labels:
    app: web-gallery
    role: web-gallery-master
spec:
  replicas: 1
  selector:
    matchLabels:
      role: web-gallery-master
  template:
    metadata:
      labels:
        app: web-gallery-nginx
        role: web-gallery-master
    spec:
      volumes:
            - name: images-meta
              emptyDir: {}
            - name: images-thumbnails
              emptyDir: {}

      initContainers:
        - name: fetch-dropbox
          image: virtualraven/webgallery:version-2.12
          imagePullPolicy: Always
          command: ["sh"]
          args: ["/docker-entrypoint.d/10-fetch-images.sh"]
          env:
            - name: 'ENABLE_GALLERY_STORE'
              value: 'yay'
            - name: 'MASTER_NODE_URL'
              value: 'webgallery-master-service'
            - name: 'DROPBOX_API_TOKEN'
              valueFrom:
                 secretKeyRef:
                  name: dropbox-credentials
                  key: api-token
          volumeMounts:
            - name: images-meta
              mountPath: /var/www/gallery/img/meta
            - name: images-thumbnails
              mountPath: /var/www/gallery/img/thumbnails

      containers:
      - name: web-gallery-nginx
        image: virtualraven/webgallery:version-2.12
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
          - name: 'ENABLE_GALLERY_STORE'
            value: 'yay'
          - name: 'DROPBOX_API_TOKEN'
            valueFrom:
               secretKeyRef:
                name: dropbox-credentials
                key: api-token
          - name: 'WEBSITE_URL'
            valueFrom:
               secretKeyRef:
                name: website-data
                key: url
          #- name: 'G_ANALYTICS_ID'
          #  valueFrom:
          #     secretKeyRef:
          #      name: website-data
          #      key: g-id
        readinessProbe:
          httpGet:
            path: /api/manifest.json
            port: 80
          periodSeconds: 3
          failureThreshold: 10
        startupProbe:
          httpGet:
            path: /api/manifest.json
            port: 80
          failureThreshold: 60
          periodSeconds: 10
        volumeMounts:
          - name: images-meta
            mountPath: /var/www/gallery/img/meta
          - name: images-thumbnails
            mountPath: /var/www/gallery/img/thumbnails

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-gallery-slave
  labels:
    app: web-gallery
    role: web-gallery-slave
spec:
  replicas: 1
  selector:
    matchLabels:
      role: web-gallery-slave
  template:
    metadata:
      labels:
        app: web-gallery-nginx
        role: web-gallery-slave
    spec:
      containers:
      - name: web-gallery-nginx
        image: virtualraven/webgallery:version-2.12
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
          - name: 'ENABLE_GALLERY_STORE'
            value: 'yay'
          - name: 'MASTER_NODE_URL'
            value: 'webgallery-master-service'
          - name: 'WEBSITE_URL'
            valueFrom:
               secretKeyRef:
                name: website-data
                key: url
          #- name: 'G_ANALYTICS_ID'
          #  valueFrom:
          #     secretKeyRef:
          #      name: website-data
          #      key: g-id
        readinessProbe:
          httpGet:
            path: /api/manifest.json
            port: 80
          periodSeconds: 3
          failureThreshold: 10
        startupProbe:
          httpGet:
            path: /api/manifest.json
            port: 80
          failureThreshold: 60
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: webgallery-master-service
spec:
  ports:
  - name: http
    targetPort: 80
    port: 80
  selector:
    role: web-gallery-master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gallery-store
  labels:
    app: gallery-store
    role: gallery-store
spec:
  replicas: 1
  selector:
    matchLabels:
      role: gallery-store
  template:
    metadata:
      labels:
        app: gallery-store-stripe
        role: gallery-store
    spec:
      containers:
      - name: gallery-store-stripe
        image: virtualraven/webgallery-store:version-2.12
        imagePullPolicy: Always
        ports:
        - containerPort: 4280
        env:
          - name: 'NODE_URL'
            value: 'http://webgallery-service'
          - name: 'STRIPE_API_TOKEN'
            valueFrom:
               secretKeyRef:
                name: stripe-credentials
                key: api-token
          - name: 'WEBSITE_URL'
            valueFrom:
               secretKeyRef:
                name: website-data
                key: url
          - name: 'GALLERY_URL'
            valueFrom:
               secretKeyRef:
                name: website-data
                key: gallery-url
        readinessProbe:
          httpGet:
            path: /ready
            port: 4280
          periodSeconds: 3
          failureThreshold: 10
        startupProbe:
          httpGet:
            path: /ready
            port: 4280
          failureThreshold: 60
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: webgallery-store
spec:
  ports:
  - name: http
    targetPort: 4280
    port: 4280
  selector:
    role: gallery-store
---